{"version":3,"sources":["store/state.js","store/actions.js","store/store.js","layouts/Nav.js","pages/Map/TaskDetails.js","UI/Modal.js","pages/Map/Map.js","pages/AddNewTask/AddNewTask.js","images/scheme.png","pages/About/About.js","App.js","index.js"],"names":["state","activeTask","tasks","undefined","localStorage","JSON","parse","actions","addTask","action","payload","push","stringify","addTaskThunk","thunk","getState","some","name","toUpperCase","task","importance","urgency","deleteTask","console","log","index","findIndex","splice","setActiveTask","updateTaskValue","value","parameter","updateTask","store","createStore","Nav","className","exact","activeClassName","to","TaskDetails","useStoreState","useStoreActions","onSubmit","e","preventDefault","type","placeholder","onChange","target","disabled","onClick","description","rows","Object","values","every","val","title","window","confirm","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Modal","show","close","children","numbers","Map","useState","fitToScreen","setFitToScreen","classNames","active","checked","map","n","style","bottom","left","number","initialFormValues","AddNewTask","history","formValues","setFormValues","updateInput","isNotValid","keys","Boolean","status","warning","parseInt","min","max","About","src","SchemeImage","alt","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47892c9c.chunk.js","sourcesContent":["const state = {\r\n  activeTask: null,\r\n  tasks: localStorage.tasks === undefined ? [] : JSON.parse(localStorage.tasks),\r\n};\r\n\r\nexport default state;\r\n","import { action, thunk } from \"easy-peasy\";\r\n\r\nconst actions = {\r\n  addTask: action((state, payload) => {\r\n    state.tasks.push(payload);\r\n    localStorage.tasks = JSON.stringify(state.tasks);\r\n  }),\r\n  addTaskThunk: thunk((actions, payload, { getState }) => {\r\n    const { tasks } = getState();\r\n\r\n    if (\r\n      tasks.some(\r\n        ({ name }) => name.toUpperCase() === payload.name.toUpperCase()\r\n      )\r\n    ) {\r\n      return \"name error\";\r\n    }\r\n\r\n    if (\r\n      tasks.some(\r\n        (task) =>\r\n          task.importance === payload.importance &&\r\n          task.urgency === payload.urgency\r\n      )\r\n    ) {\r\n      return \"coordinates error\";\r\n    }\r\n\r\n    actions.addTask(payload);\r\n    return \"success\";\r\n  }),\r\n  deleteTask: action((state, payload) => {\r\n    console.log(\"tasks:\", state.tasks);\r\n    console.log(\"payload:\", payload);\r\n    const index = state.tasks.findIndex(({ name }) => name === payload.name);\r\n    console.log(\"index:\", index);\r\n    state.tasks.splice(0, 1);\r\n    localStorage.tasks = JSON.stringify(state.tasks);\r\n  }),\r\n  setActiveTask: action((state, payload) => {\r\n    state.activeTask = payload;\r\n  }),\r\n  updateTaskValue: action((state, { value, parameter }) => {\r\n    state.activeTask[parameter] = value;\r\n  }),\r\n  updateTask: action((state, payload) => {\r\n    const { index, ...activeTask } = state.activeTask;\r\n    state.tasks[index] = { ...activeTask };\r\n    state.activeTask = null;\r\n    localStorage.tasks = JSON.stringify(state.tasks);\r\n  }),\r\n};\r\n\r\nexport default actions;\r\n","import { createStore } from \"easy-peasy\";\r\nimport state from \"./state\";\r\nimport actions from \"./actions\";\r\n\r\nconst store = createStore({\r\n  ...state,\r\n  ...actions,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"Nav\">\r\n      <NavLink exact activeClassName=\"active\" to=\"/\">\r\n        Tasks\r\n      </NavLink>\r\n      <NavLink exact activeClassName=\"active\" to=\"/add-new-task\">\r\n        New Task\r\n      </NavLink>\r\n      <NavLink exact activeClassName=\"active\" to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst TaskDetails = () => {\r\n  const { tasks, activeTask } = useStoreState((state) => state);\r\n\r\n  const { deleteTask, setActiveTask, updateTaskValue, updateTask } =\r\n    useStoreActions((actions) => actions);\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      deleteTask(activeTask);\r\n      setActiveTask(null);\r\n      toast.success(\"✅ The task was deleted\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isNotValid = () => {\r\n    return Object.values(tasks[activeTask.index]).every(\r\n      (val, index) => val === Object.values(activeTask)[index]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateTask();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-details\">\r\n      <h2>Task Details:</h2>\r\n      <section className=\"name\">\r\n        <input\r\n          type=\"text\"\r\n          value={activeTask.name}\r\n          placeholder=\"Name of the task\"\r\n          onChange={(e) => {\r\n            updateTaskValue({\r\n              value: e.target.value,\r\n              parameter: \"name\",\r\n            });\r\n          }}\r\n        />\r\n      </section>\r\n      <section className=\"flex\">\r\n        <div>\r\n          <strong>Importance</strong>:\r\n          <div className=\"arrows\">\r\n            <span className=\"number\">{activeTask.importance}</span>\r\n            <button\r\n              className=\"arrow arrow-up\"\r\n              type=\"button\"\r\n              disabled={activeTask.importance === 10}\r\n              onClick={() => {\r\n                updateTaskValue({\r\n                  value: activeTask.importance + 1,\r\n                  parameter: \"importance\",\r\n                });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"arrow arrow-down\"\r\n              type=\"button\"\r\n              disabled={activeTask.importance === 1}\r\n              onClick={() => {\r\n                updateTaskValue({\r\n                  value: activeTask.importance - 1,\r\n                  parameter: \"importance\",\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <strong>Urgency</strong>:\r\n          <div className=\"arrows\">\r\n            <span className=\"number\">{activeTask.urgency}</span>\r\n            <button\r\n              className=\"arrow arrow-up\"\r\n              type=\"button\"\r\n              disabled={activeTask.urgency === 10}\r\n              onClick={() => {\r\n                updateTaskValue({\r\n                  value: activeTask.urgency + 1,\r\n                  parameter: \"urgency\",\r\n                });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"arrow arrow-down\"\r\n              type=\"button\"\r\n              disabled={activeTask.urgency === 1}\r\n              onClick={() => {\r\n                updateTaskValue({\r\n                  value: activeTask.urgency - 1,\r\n                  parameter: \"urgency\",\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"score\">\r\n        <b>Score</b>: {activeTask.importance} * {activeTask.urgency} ={\" \"}\r\n        {activeTask.importance * activeTask.urgency}\r\n      </section>\r\n      <section className=\"description\">\r\n        <textarea\r\n          type=\"text\"\r\n          value={activeTask.description}\r\n          placeholder=\"Additional description\"\r\n          onChange={(e) => {\r\n            updateTaskValue({\r\n              value: e.target.value,\r\n              parameter: \"description\",\r\n            });\r\n          }}\r\n          rows=\"3\"\r\n        />\r\n      </section>\r\n      <section className=\"controls\">\r\n        <button className=\"update\" type=\"submit\" disabled={isNotValid()}>\r\n          Update\r\n        </button>\r\n        <button\r\n          className=\"delete\"\r\n          type=\"button\"\r\n          title=\"Click on to delete this task\"\r\n          onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </section>\r\n      <div\r\n        className=\"close\"\r\n        title=\"Click to close the window\"\r\n        onClick={() => setActiveTask(null)}\r\n      >\r\n        ❌\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;\r\n","import React from \"react\";\r\n\r\nconst Modal = ({ show, close, children }) => {\r\n  const closeHandler = (e) => {\r\n    if (e.target.className === \"Modal\") {\r\n      close();\r\n    }\r\n  };\r\n\r\n  return show ? (\r\n    <div className=\"Modal\" onClick={closeHandler}>\r\n      {children}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport classNames from \"classnames\";\r\n\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nconst Map = () => {\r\n  const { tasks, activeTask } = useStoreState((state) => state);\r\n  const { setActiveTask } = useStoreActions((actions) => actions);\r\n  const [fitToScreen, setFitToScreen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"Map\">\r\n      <Modal show={activeTask !== null} close={() => setActiveTask(null)}>\r\n        <TaskDetails />\r\n      </Modal>\r\n      <div className={classNames(\"scroll\", { active: !fitToScreen })}>\r\n        <p className=\"text\">Importance</p>\r\n        <p className=\"fit-to-screen\">\r\n          Fit to screen:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={fitToScreen}\r\n            onChange={(e) => setFitToScreen(!fitToScreen)}\r\n          />\r\n        </p>\r\n        <div className=\"container\">\r\n          <div className=\"lines lines-horizontal\">\r\n            {[numbers.map((n) => <div key={n} className=\"line\" />)]}\r\n          </div>\r\n          <div className=\"lines lines-vertical\">\r\n            {[numbers.map((n) => <div key={n} className=\"line\" />)]}\r\n          </div>\r\n          {tasks.map((task, index) => (\r\n            <div\r\n              key={task.name}\r\n              className={`${\r\n                // task.name === activeTask.name ? \"task active\" : \"task\"\r\n                \"task\"\r\n              }`}\r\n              style={{\r\n                bottom: `${(100 / 11) * task.importance}%`,\r\n                left: `${(100 / 11) * task.urgency}%`,\r\n              }}\r\n              onClick={() => setActiveTask({ ...task, index })}\r\n            >\r\n              {task.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"urgency\">\r\n          <div className=\"scale\">\r\n            {[numbers.map((number) => <span key={number}>{number}</span>)]}\r\n          </div>\r\n          <div className=\"text\">Urgency</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialFormValues = {\r\n  name: \"\",\r\n  importance: 0,\r\n  urgency: 0,\r\n};\r\n\r\nconst AddNewTask = ({ history }) => {\r\n  const { addTaskThunk } = useStoreActions((actions) => actions);\r\n\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n  function updateInput(name, value) {\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const status = addTaskThunk({ ...formValues, description: \"\" });\r\n\r\n    if (status === \"name error\") {\r\n      toast.warning(\"⚠ The task with the same name already exists\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n\r\n    if (status === \"coordinates error\") {\r\n      toast.warning(\"⚠ The following coordinates are already taken\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n\r\n    if (status === \"success\") {\r\n      setFormValues(initialFormValues);\r\n      history.push(\"/\");\r\n      toast.success(\"✅ The task was added\", {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  function isNotValid() {\r\n    return Object.keys(formValues).some(\r\n      (value) => Boolean(formValues[value]) === false\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"AddNewTask\">\r\n      <label>Name of the task:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={formValues.name}\r\n        onChange={(e) => updateInput(\"name\", e.target.value)}\r\n      />\r\n      <label>0 Not Important | 10 Very Important:</label>\r\n      <div className=\"flex\">\r\n        <button className=\"number\" disabled={formValues.importance === 0}>\r\n          {formValues.importance}\r\n        </button>\r\n        <input\r\n          type=\"range\"\r\n          value={formValues.importance}\r\n          onChange={(e) => updateInput(\"importance\", parseInt(e.target.value))}\r\n          min=\"0\"\r\n          max=\"10\"\r\n        />\r\n      </div>\r\n      <label>0 Not Urgent | 10 Very Urgent:</label>\r\n      <div className=\"flex\">\r\n        <button className=\"number\" disabled={formValues.urgency === 0}>\r\n          {formValues.urgency}\r\n        </button>\r\n        <input\r\n          type=\"range\"\r\n          value={formValues.urgency}\r\n          onChange={(e) => updateInput(\"urgency\", parseInt(e.target.value))}\r\n          min=\"0\"\r\n          max=\"10\"\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        disabled={isNotValid()}\r\n        title={isNotValid() ? \"Fill the data\" : \"Click to submit\"}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewTask;\r\n","export default __webpack_public_path__ + \"static/media/scheme.29210e47.png\";","import React from \"react\";\r\n\r\nimport SchemeImage from \"../../images/scheme.png\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"About\">\r\n      <div className=\"text\">\r\n        <p>\r\n          The aim of this application is to help you visualize your\r\n          tasks/projects, so you can prioritize them better and choose what{\" \"}\r\n          <b>really maters</b> and <b>makes</b> a difference.\r\n        </p>\r\n        <p>Look at the diagram ⏬ below to get the gist of how it works:</p>\r\n      </div>\r\n      <img className=\"image\" src={SchemeImage} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","// TODO: Create app logo\r\n// TODO: work on mobile version 1) navbar 2) map component should be scrollable\r\n\r\nimport React from \"react\";\r\n\r\nimport \"./scss/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport store from \"./store/store\";\r\n\r\nimport Nav from \"./layouts/Nav\";\r\nimport Map from \"./pages/Map/Map\";\r\nimport AddNewTask from \"./pages/AddNewTask/AddNewTask\";\r\nimport About from \"./pages/About/About\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Nav />\r\n          <Route exact path=\"/\" component={Map} />\r\n          <Route exact path=\"/add-new-task\" component={AddNewTask} />\r\n          <Route exact path=\"/about\" component={About} />\r\n        </div>\r\n      </Router>\r\n\r\n      <ToastContainer />\r\n    </StoreProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}